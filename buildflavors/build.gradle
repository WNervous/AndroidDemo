apply plugin: 'com.android.application'
apply plugin: 'walle'
android {
    compileSdkVersion 28



    defaultConfig {
        applicationId "com.wys.buildflavors"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            storeFile file("wystest.keystore")
            storePassword 'keystore'
            keyPassword 'keystore'
            keyAlias 'key0'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "normal"
//    productFlavors{
//        beta{}
//        xiaomi{
//
//        }
//        meizu{
//
//        }
//    }


//    applicationVariants.all {
//        //判断是release还是debug版本
//        def buildType = it.buildType.name
//        def fileName
//        //下面的channel是获取渠道号，你获取渠道号不一定会和我的代码一样，因为有可能你的渠道名称的规则和我的不一样，我的规则是${渠道名}-${applicationId},所以我是这样取的。
//        def channel = it.productFlavors[0].name.split("-")[0]
//        //获取当前时间的"YYYY-MM-dd"格式。
//        def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
//        //只对Release包起作用，如果不是Release包则不变更输出路径，否则可能导致AS无法自动安装debug包。
//        if (buildType == "release") {
//            it.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/apks/${it.productFlavors[0].applicationId}/${createTime}")
//        }
//        it.outputs.each {
//            //只对Release包起作用，如果不是Release包则不变更名称。
//            if (buildType == "release") {
//                //我此处的命名规则是：渠道名_项目名_版本名_创建时间_构建类型.apk
//                fileName = "${channel}_项目名称_v${defaultConfig.versionName}_${createTime}-${buildType}.apk"
//                //将名字打印出来，以便及时查看是否满意。
//                println "文件名：-----------------${fileName}"
//                //重新对apk命名。(适用于Gradle4.0以下版本)
//                //it.outputFile = new File(it.outputFile.parent, fileName)
//                //重新对apk命名。(适用于Gradle4.0（含）以上版本)如果你Gradle版本是4.0以下版本则将上面的一行代码放开并注释下面的这一行。
//                it.outputFileName = fileName
//            }
//        }
//    }


}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.meituan.android.walle:library:1.1.6'
}
